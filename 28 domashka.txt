Створити програмне забезпечення Сервер
	 1. Код сервера повинен бути представлений окремим maven-модулем
	 2. Сервер повинен вміти приймати вхідні з'єднання від клієнтів у необмеженій кількості. 
		Простіше кажучи, до сервера можуть підключитися більше одного клієнта
	 3. Після успішного підключення клієнта сервер зберігає інформацію 
		про нього «активні з'єднання», що включає наступні дані:
		 - Випадково згенероване ім'я з єдиним шаблоном
		    Наприклад: client-1, client-2, client-N
		 - Час підключення
		 - Клієнтський сокет
	 4. Після успішного підключення клієнта, сервер робить розсилку повідомлень для 
		всіх клієнтів, що вже підключилися, про те, що новий клієнт підключився.
		 - Наприклад: [SERVER] Client-1 успішно підключився.
	 5. Сервер підтримує набір спеціальних команд клієнтам:
		 - exit Відключення клієнта від з'єднання.                   
		У цей момент клієнт, який відправив цю команду серверу, 
		буде відключений від з'єднання з сервером та видалено зі списку активних з'єднань.

		** -file шлях_файлу_тут  -Відправлення файлу на сервер.
		В даний момент вказаний файл приймається на стороні сервера та зберігається у довільному місці.
		Наприклад: клієнт пише ... - file c:/path/to/data.txt

	 6. Зібрати додаток у вигляді JAR-файлу, що виконується
	 7. Вихідний код повинен бути покритий юніт-тестами (як мінімум 3 класу)

Створити програмне забезпечення «Клієнт»
	 1. Код сервера має бути представлений окремим maven-модулем
	 2. Клієнт повинен вміти підключатися до сервера та приймати повідомлення від сервера
	 3. Клієнт повинен вміти надсилати спеціальні команди для сервера
	 4. Клієнт повинен вміти відключатися від сервера
	 5. Зібрати додаток у вигляді виконуваного JAR-файлу
	 6. Вихідний код має бути покритий юніт-тестами (як мінімум 3 класи)